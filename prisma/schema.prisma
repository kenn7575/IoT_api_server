generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model alert {
  id            Int              @id @default(autoincrement()) @db.UnsignedInt
  name          String           @db.VarChar(100)
  description   String?          @db.VarChar(100)
  createdAt     DateTime         @default(now())
  roomId        Int              @db.UnsignedInt
  deviceId      Int              @db.UnsignedInt
  sensorType    alert_sensorType
  MeasurementId Int?             @unique(map: "Alert_MeasurementId_key") @default(1) @db.UnsignedInt

  @@index([deviceId], map: "Alert_deviceId_idx")
  @@index([roomId], map: "Alert_roomId_idx")
}

model apikey {
  id          Int      @id @default(autoincrement()) @db.UnsignedInt
  name        String   @db.VarChar(100)
  apiKey      String   @db.VarChar(100)
  deviceId    Int      @db.UnsignedInt
  createdAt   DateTime @default(now())
  accessLevel Int      @default(1) @db.UnsignedInt

  @@index([deviceId], map: "ApiKey_deviceId_idx")
}

model device {
  id          Int      @id @default(autoincrement()) @db.UnsignedInt
  name        String   @db.VarChar(100)
  description String?  @db.VarChar(255)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  roomId      Int      @db.UnsignedInt
  settingId   Int      @unique(map: "Device_settingId_key") @db.UnsignedInt
  active      Boolean  @default(true)
  machineId   String   @unique(map: "Device_machineId_key") @db.VarChar(100)

  @@index([roomId], map: "Device_roomId_idx")
}

model measurement {
  id          Int                    @id @default(autoincrement()) @db.UnsignedInt
  createdAt   DateTime               @default(now())
  measurement Float                  @db.Float
  valueType   String?                @db.VarChar(100)
  deviceId    Int                    @db.UnsignedInt
  roomId      Int                    @db.UnsignedInt
  sensorType  measurement_sensorType

  @@index([deviceId], map: "Measurement_deviceId_idx")
  @@index([roomId], map: "Measurement_roomId_idx")
}

model room {
  id          Int     @id @default(autoincrement()) @db.UnsignedInt
  name        String  @db.VarChar(100)
  description String? @db.VarChar(255)
}

model sensorsettings {
  id                  Int                         @id @default(autoincrement()) @db.UnsignedInt
  createdAt           DateTime                    @default(now())
  updatedAt           DateTime                    @default(now())
  sensorType          sensorsettings_sensorType
  maxValue            Float                       @db.Float
  minValue            Float                       @db.Float
  timeIntervalSeconds Int                         @default(300) @db.UnsignedInt
  activePeriod        sensorsettings_activePeriod @default(Open)
  deviceId            Int                         @db.UnsignedInt

  @@index([deviceId], map: "SensorSettings_deviceId_idx")
}

model setting {
  id                            Int      @id @default(autoincrement()) @db.UnsignedInt
  name                          String   @default("Default") @db.VarChar(100)
  startTime                     String   @default("08:00:00") @db.VarChar(16)
  endTime                       String   @default("16:00:00") @db.VarChar(16)
  createdAt                     DateTime @default(now())
  updateSettingsIntervalSeconds Int      @default(300) @db.UnsignedInt
  updatedAt                     DateTime @default(now())
}

enum sensorsettings_sensorType {
  Temperature
  Humidity
  Noise
  Pressure
  Light
  Other
}

enum alert_sensorType {
  Temperature
  Humidity
  Noise
  Pressure
  Light
  Other
}

enum measurement_sensorType {
  Temperature
  Humidity
  Noise
  Pressure
  Light
  Other
}

enum sensorsettings_activePeriod {
  Open
  Closed
}
